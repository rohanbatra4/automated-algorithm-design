Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(StandardScaler(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyBETA(ARG0, 0), 6), 10), 5), 5), 9, greaterThanEqual(0.1, 0.01)), 6, 9), falseBool), 100), 10)), 6), 12), 12), 12), 5), 9, 3), 4, 9), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(LearnerType('DECISIONTREE_REGRESSION', None), 1218, 5), -4, 5), 6, 12), 9, equal(100.0, 1.0)), myIntMult(6, 5), lessThanOrEqual(myFloatDiv(1.0, 1.6901306085265944), myFloatIntMult(100.0, 5055))), 8823, falseBool), 0, 6), 1218, 5), ModifyEnsembleInt(ModifyEnsembleInt(ModifyEnsembleFloat(EnsembleType('SINGLE', None), 1.0, 5), 150, 3), 5, 10))
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(StandardScaler(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyBETA(ARG0, 0), 6), 10), 5), 5), 9, greaterThanEqual(0.1, 0.01)), 6, 9), falseBool), 100), 10)), 6), 12), 12), 12), 5), 9, 3), 4, 9), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(LearnerType('DECISIONTREE_REGRESSION', None), 1218, 5), myIntMult(6, 0), 5), 6, 12), 9, greaterThan(1.0, 10.0)), myIntMult(6, 5), lessThanOrEqual(1.0, myFloatIntMult(100.0, 5055))), 8823, falseBool), 0, 6), 1218, 5), ModifyEnsembleInt(ModifyEnsembleInt(ModifyEnsembleFloat(EnsembleType('SINGLE', None), 1.0, 5), 150, 3), 5, 10))
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(StandardScaler(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyBETA(ARG0, 0), 6), 10), 5), 5), 9, greaterThanEqual(1.0, 0.01)), 6, 9), falseBool), 100), 10)), 6), 12), 12), 12), 5), 9, 3), 4, 9), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(LearnerType('DECISIONTREE_REGRESSION', None), 1218, 5), -5, 5), 6, 12), 9, falseBool), myIntMult(6, 5), lessThanOrEqual(myFloatDiv(1.0, 1.6901306085265944), myFloatIntMult(100.0, 5055))), 8823, notEqual(1.0, 0.01)), 0, 6), 1218, 5), ModifyEnsembleInt(ModifyEnsembleInt(ModifyEnsembleFloat(EnsembleType('SINGLE', None), 1.0, 100), 5, 10), 5, 10))
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(StandardScaler(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyBETA(ARG0, 0), 6), 10), 5), 5), 9, greaterThanEqual(0.1, 0.01)), 6, 9), falseBool), 100), 10)), 6), 12), 12), 12), 5), 9, 3), 4, 9), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(LearnerType('DECISIONTREE_REGRESSION', None), 2613, 0), -13, 5), 6, 12), 9, trueBool), myIntMult(6, 5), lessThanOrEqual(myFloatDiv(1.0, 1.0), myFloatIntMult(100.0, 5055))), 8823, falseBool), 0, 6), 1218, 5), ModifyEnsembleInt(ModifyEnsembleInt(ModifyEnsembleFloat(EnsembleType('SINGLE', None), 1.0, 5), 150, 3), 5, 10))
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(StandardScaler(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyBETA(ARG0, 0), 6), 10), 5), 5), 9, greaterThanEqual(0.1, 0.01)), 6, 9), falseBool), 100), 10)), 6), 12), 12), 12), 5), 9, 3), 4, 9), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(LearnerType('DECISIONTREE_REGRESSION', None), 2613, 0), -13, 5), 6, 12), 9, equal(100.0, 1.0)), myIntMult(6, 5), lessThanOrEqual(myFloatDiv(1.0, 1.6901306085265944), myFloatIntMult(100.0, 5055))), 8823, falseBool), 0, 6), 1218, 5), ModifyEnsembleInt(ModifyEnsembleInt(ModifyEnsembleFloat(EnsembleType('SINGLE', None), 1.0, 5), 150, 3), 5, 10))
Learner(MyDeltaSTOCH(MinMaxScaler(MyEVM(MyDeltaSTOCH(MyDeltaWILLR(MyEVM(MyEVM(ARG0, 7664), 128), 100), ifThenElseBool(trueBool, trueBool, greaterThanEqual(myFloatMult(myFloatMult(0.1, -2.970512418063765), 10.0), 10.0)), 3), 7664)), ifThenElseBool(trueBool, ifThenElseBool(trueBool, trueBool, falseBool), lessThanOrEqual(myFloatAdd(ifThenElseFloat(falseBool, 0.1, 0.01), passFloat(100.0)), myFloatSub(ifThenElseFloat(trueBool, 100.0, 1.0), passFloat(0.01)))), 3), LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaSTOCH(MyEVM(MyEVM(ARG0, 54), 128), ifThenElseBool(trueBool, trueBool, greaterThanEqual(myFloatMult(myFloatMult(0.1, -1.2983197951137893), 10.0), ifThenElseFloat(passBool(trueBool), myFloatIntAdd(-1.2983197951137893, 50), myFloatSub(0.1, 0.01)))), 3), LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaSTOCH(MyEVM(MyEVM(MyEVM(MyDeltaSTOCH(MyEVM(MyEVM(ARG0, 54), 50), ifThenElseBool(notEqual(0.01, -1.8333375458345245), trueBool, greaterThanEqual(myFloatMult(0.1, -1.2983197951137893), ifThenElseFloat(passBool(myNot(notEqual(100.0, 2.7194073492044266))), myFloatIntAdd(-2.0061685410570473, 7), myFloatSub(0.1, 0.01)))), 3), 54), 128), 128), passBool(ifThenElseBool(trueBool, trueBool, greaterThanEqual(myFloatMult(0.1, -1.2983197951137893), ifThenElseFloat(passBool(trueBool), myFloatIntAdd(-2.0061685410570473, myNot(greaterThan(passFloat(10.0), myFloatIntMult(1.0, 255)))), myFloatSub(0.1, 0.01))))), 3), LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaSTOCH(MyEVM(MyEVM(MyEVM(MyEVM(ARG0, 77), 128), 7664), 128), ifThenElseBool(trueBool, trueBool, greaterThanEqual(myFloatMult(myFloatMult(0.1, -1.2983197951137893), 10.0), ifThenElseFloat(passBool(trueBool), myFloatIntAdd(-0.6424463655877624, 1), 0.1))), 3), LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaSTOCH(MyEVM(MyEVM(ARG0, 7664), 128), ifThenElseBool(trueBool, trueBool, greaterThanEqual(myFloatMult(0.1, -1.2983197951137893), ifThenElseFloat(passBool(trueBool), myFloatIntAdd(-2.0061685410570473, notEqual(0.1, 10.0)), myFloatSub(0.1, 0.01)))), 3), LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), EnsembleType('SINGLE', None))
MyBIASSMA(Learner(MinMaxScaler(MinMaxScaler(MinMaxScaler(MyBollingerBand(MySTOCH(MyEMA(MyOBV(MySMA(MinMaxScaler(MyBollingerBand(MySTOCH(MyEMA(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MinMaxScaler(MyBollingerBand(MySMA(ARG0, 64), 2, 3, 2))), ModifyLearnerInt(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), myIntSub(3, 12), 6), trueBool, 6), EnsembleType('SINGLE', None)), passInt(6)), 100), 6), 7, 4, 10), 2, myIntSub(6, myIntMult(14, myIntMult(255, 11))), 3)), 64), myIntAdd(lessThanOrEqual(1.0, 0.1), equal(myFloatIntAdd(100.0, 100), 10.0))), 6), 6, 4, 6), 2, 2, 14)))), ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), equal(myIntToFloat(passInt(equal(10.0, 100.0))), 100.0), 6), EnsembleType('SINGLE', None)), trueBool)
MyBIASSMA(Learner(MinMaxScaler(MyBollingerBand(MyBollingerBand(MinMaxScaler(MyBollingerBand(MyEMA(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MinMaxScaler(MyBollingerBand(MySMA(MyBollingerBand(MyBollingerBand(MinMaxScaler(MyBollingerBand(MyEMA(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MinMaxScaler(MyBollingerBand(MySMA(ARG0, 64), 2, 3, myIntAdd(128, 2)))), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('SINGLE', None)), 6), 100), 6), 2, 2, 13)), 2, 32, 4), 2, myIntSub(4, myIntMult(4, 255)), 14), 64), 2, 3, 2))), ModifyLearnerBool(LearnerType('ARGMIN', {'sampling_rate': 1}), lessThan(passFloat(0.1), myFloatAdd(100.0, ifThenElseFloat(falseBool, myFloatIntMult(3.2542128728211903, 7), myIntToFloat(50)))), 10), EnsembleType('SINGLE', None)), 6), 100), 6), 2, 2, 14)), 2, 32, 7), 2, myIntSub(6, myIntMult(4, myIntMult(255, 2))), 14)), ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), myIntSub(passInt(3), 12), 6), EnsembleType('SINGLE', None)), falseBool)
MyBIASSMA(Learner(MinMaxScaler(MinMaxScaler(MyBollingerBand(MyBollingerBand(MinMaxScaler(MyBollingerBand(MySTOCH(MyEMA(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MinMaxScaler(MyBollingerBand(MySMA(MinMaxScaler(MinMaxScaler(MyBollingerBand(MySMA(ARG0, 64), 2, 3, 2))), 64), 2, 3, 2))), ModifyLearnerBool(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), greaterThan(myFloatAdd(passFloat(100.0), 100.0), myFloatSub(myFloatIntAdd(100.0, 10), myFloatAdd(3.2542128728211903, 100.0))), 6), falseBool, 10), EnsembleType('SINGLE', None)), 6), 100), 6), 7, 4, 2), 2, 2, 14)), 2, 32, 7), 2, myIntSub(6, myIntMult(4, 255)), 14))), ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), myIntSub(41, 12), 6), EnsembleType('SINGLE', None)), falseBool)
MyBIASSMA(Learner(MinMaxScaler(MyBollingerBand(MyBollingerBand(MinMaxScaler(MyBollingerBand(MySTOCH(MyEMA(MyOBV(MyBIASEMA(MyBollingerBand(MinMaxScaler(MyBollingerBand(MySTOCH(MyEMA(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MyBollingerBand(MySTOCH(MyEMA(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MinMaxScaler(MyBollingerBand(MySMA(Learner(MinMaxScaler(MyBollingerBand(MySTOCH(MyEMA(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MyBollingerBand(MySMA(ARG0, 64), 2, 3, 2)), ModifyLearnerBool(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), lessThan(0.1, 0.1), 6), myNot(trueBool), 2), EnsembleType('SINGLE', None)), 6), 100), 6), 7, myIntSub(3, -14), 14), 2, -13, 2)), ModifyLearnerBool(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), greaterThan(myFloatAdd(passFloat(100.0), myFloatSub(10.0, 100.0)), myFloatSub(100.0, myFloatAdd(3.2542128728211903, 100.0))), 6), greaterThan(myFloatAdd(passFloat(100.0), myFloatSub(10.0, 100.0)), myFloatSub(100.0, 3.2542128728211903)), 10), EnsembleType('SINGLE', None)), 64), 2, 3, 2))), ModifyLearnerBool(ModifyLearnerInt(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), greaterThan(myFloatAdd(passFloat(100.0), myFloatSub(10.0, 100.0)), myFloatSub(100.0, myFloatAdd(myFloatAdd(3.2542128728211903, 100.0), 100.0))), 6), greaterThan(myFloatAdd(passFloat(100.0), myFloatSub(10.0, 100.0)), myFloatSub(myFloatIntAdd(100.0, 10), myFloatAdd(3.2542128728211903, 100.0))), 6), equal(100.0, 100.0), 10), EnsembleType('SINGLE', None)), 6), 100), 6), 7, myIntSub(3, -14), 14), 2, 3, 2)), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('SINGLE', None)), 6), 100), 6), 7, 4, 2), 2, 2, 14)), 2, 32, 7), 6), 100), 6), 7, 4, 2), 2, 2, myNot(trueBool))), 2, 32, 4), 2, myIntSub(6, myIntMult(myIntSub(128, 4), 7)), 14)), ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), myIntSub(3, 13), 6), EnsembleType('SINGLE', None)), falseBool)
MyBIASSMA(Learner(MinMaxScaler(MyBollingerBand(MyBollingerBand(MySTOCH(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MinMaxScaler(MyBollingerBand(MyBollingerBand(MySTOCH(MyOBV(MyBIASEMA(Learner(MinMaxScaler(MyBollingerBand(MySTOCH(MyEMA(MySMA(ARG0, 7), 1), lessThan(myFloatIntAdd(myIntToFloat(7), myIntDiv(0, 64)), 10.0), 4, -12), 2, 2, 70)), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('SINGLE', None)), 6), 32), 7, 4, 350), 4, greaterThan(myFloatAdd(100.0, myFloatSub(10.0, 100.0)), myFloatSub(1.0, myFloatAdd(10.0, myFloatIntAdd(10.0, 128)))), 26), 2, myIntSub(2, 4), 14))), ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), ifThenElseBool(trueBool, trueBool, falseBool), 6), ModifyEnsembleFloat(EnsembleType('SINGLE', None), 100.0, 5)), 6), 32), 7, 4, -2), 2, greaterThan(myFloatAdd(passFloat(100.0), myFloatSub(10.0, 100.0)), myFloatSub(myFloatIntAdd(100.0, 10), myFloatAdd(10.0, myFloatIntAdd(10.0, 7)))), 14), 2, myIntSub(2, 32), lessThan(myIntToFloat(passInt(passBool(falseBool))), myFloatAdd(100.0, ifThenElseFloat(falseBool, myFloatIntMult(3.2542128728211903, 7), myIntToFloat(50)))))), ModifyLearnerInt(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), 14, 6), myIntSub(3, 7837), myIntSub(128, 7)), EnsembleType('SINGLE', None)), ifThenElseBool(trueBool, trueBool, greaterThan(myFloatAdd(passFloat(100.0), myFloatSub(10.0, 100.0)), myFloatSub(myFloatIntAdd(100.0, 10), 10.0))))
Learner(MyDeltaMACD(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaBIASEMA(MyDeltaSMA(MyDeltaRSI(MyDeltaSMA(MyWILLR(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 0, 1), 1, 1), passInt(14)), passInt(lessThan(myFloatIntSub(2.707036852482071, greaterThan(myFloatIntSub(100.0, falseBool), 10.0)), 1.0)), 11, 3, -4), 11, 1, -10), -4, 9), myIntDiv(5, 7)), 6), 6), 10), True), 32), 6), passInt(92), myIntMult(9, 1)), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaBIASEMA(MyDeltaSMA(MyDeltaRSI(MyDeltaSMA(MyWILLR(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 0, 1), 1, 1), passInt(14)), passInt(falseBool), 11, 3, -4), 11, 1, -10), -4, 9), myIntDiv(5, 7)), 6), 6), 10), True), 10), 6), passInt(92), myIntMult(9, 1)), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaBIASEMA(MyDeltaSMA(MyDeltaRSI(MyDeltaSMA(MyWILLR(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 0, 1), 1, 1), passInt(14)), passInt(falseBool), 11, 3, -11), 11, 1, -10), -4, 9), myIntDiv(5, 7)), 6), 6), 10), True), 10), 6), passInt(92), myIntMult(64, 1)), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyDeltaRSI(MyBETA(MyDeltaBIASSMA(MyDeltaBIASEMA(MyDeltaSMA(MyDeltaRSI(MyDeltaSMA(MyWILLR(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 0, 1), 1, 1), passInt(14)), passInt(ifThenElseBool(falseBool, trueBool, trueBool)), 11, 3, -4), 11, 1, -2), 3, 9), passInt(myIntDiv(5, 7))), 6), 6), 10), True), 10), 6), passInt(92), myIntMult(9, 1)), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaBIASEMA(MyDeltaSMA(MyDeltaRSI(MyDeltaSMA(MyWILLR(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 0, 1), 1, 1), passInt(14)), passInt(lessThan(myFloatIntSub(2.707036852482071, greaterThan(myFloatIntSub(2.7898140710676875, lessThan(myFloatIntSub(2.707036852482071, greaterThan(myFloatIntSub(100.0, falseBool), 10.0)), myFloatDiv(1.0, 0.1))), 10.0)), 1.0)), 11, 3, -4), 11, 1, -10), -4, 9), myIntDiv(5, 7)), 6), 6), 10), True), 10), 6), passInt(92), myIntMult(9, 1)), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MinMaxScaler(MyEVM(MinMaxScaler(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 7, 1), 1, 1), 1), 7, 14, 5, 1), -10, 7, greaterThan(1.0, 100.0)), 14, 14), 14), 1, 1), 1), 7, 14, 5, True), 14, 7, notEqual(passFloat(myFloatDiv(100.0, myFloatIntSub(myFloatAdd(myFloatIntMult(100.0, 32), ifThenElseFloat(lessThanOrEqual(0.1, 100.0), 0.1794688725998146, 1.5378790155948439)), 4))), myFloatMult(100.0, 0.1))), 14, 14), -7)), myIntSub(-15, 1))), LearnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}), EnsembleType('SINGLE', None))
Learner(MinMaxScaler(MyEVM(MinMaxScaler(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 7, 1), 1, 1), 1), 7, 14, 5, 1), -10, 7, greaterThan(1.0, 100.0)), 14, 14), 14), 1, 1), 1), 7, 14, 5, True), 14, 7, notEqual(myFloatDiv(100.0, myFloatIntSub(myFloatAdd(100.0, ifThenElseFloat(greaterThanEqual(0.1, 10.0), 0.1794688725998146, 1.5378790155948439)), 4)), myFloatMult(100.0, 0.1))), 14, 14), -7)), myIntSub(-15, 1))), LearnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}), EnsembleType('SINGLE', None))
Learner(MinMaxScaler(MyEVM(MinMaxScaler(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 7, 1), 1, 1), 1), 7, 14, 5, 1), -10, 7, greaterThan(1.0, 100.0)), 14, 14), 14), 1, 1), 1), 7, 14, 5, True), 14, 7, notEqual(myFloatDiv(100.0, myFloatIntSub(myFloatAdd(myFloatIntMult(1.3820645321475933, 32), ifThenElseFloat(lessThanOrEqual(0.1, 100.0), 0.1794688725998146, 1.5378790155948439)), 4)), myFloatMult(100.0, 0.1))), 14, 14), -7)), myIntSub(-15, 1))), LearnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}), EnsembleType('SINGLE', None))
Learner(MinMaxScaler(MyEVM(MinMaxScaler(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 7, 1), 1, 1), 1), 7, 14, 5, 1), -10, 7, greaterThan(1.0, 100.0)), 14, 14), 14), 1, 1), 1), 7, 14, 5, True), 14, 7, notEqual(myFloatDiv(100.0, myFloatIntSub(10.0, 4)), myFloatMult(100.0, 0.1))), 14, 14), -7)), myIntSub(-15, 1))), LearnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}), EnsembleType('SINGLE', None))
Learner(MinMaxScaler(MyEVM(MinMaxScaler(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyEVM(MyRSI(MySTOCH(MyMACD(MyEMA(MyIdentity(MyIdentity(ARG0, 7, 1), 1, 1), 1), 7, 14, 5, 1), -10, 7, greaterThan(1.0, 100.0)), 14, 14), 14), 1, 1), 1), 7, 14, 5, True), 14, 7, notEqual(myFloatDiv(100.0, myFloatIntSub(myFloatAdd(myFloatIntMult(100.0, 32), ifThenElseFloat(lessThanOrEqual(0.1, 100.0), 0.1794688725998146, 1.5378790155948439)), 4)), myFloatMult(100.0, 0.1))), 14, 14), -7)), myIntSub(-15, 1))), LearnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}), EnsembleType('SINGLE', None))
Learner(MyEVM(MyDeltaSTOCH(MyDeltaSTOCH(MyDeltaRSI(MyBollingerBand(MyEVM(MyDeltaMACD(MyEVM(MyDeltaSTOCH(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyEVM(MyDeltaSTOCH(MyEVM(MyDeltaSTOCH(MyDeltaSTOCH(MyBollingerBand(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyBollingerBand(MyAROON(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyBollingerBand(MyEVM(MyDeltaSTOCH(ARG0, 1, 32), 8), 5, falseBool, 10), 0), 128, greaterThan(myFloatIntDiv(myFloatIntSub(myFloatIntAdd(-0.5840088004334074, 10), lessThan(100.0, -4.695623339332281)), lessThanOrEqual(myFloatIntSub(0.1, 8), -4.695623339332281)), myFloatMult(-4.695623339332281, 100.0)), 980), 1, 14), 8), 7, falseBool, 10), 0), 10, greaterThan(myFloatIntDiv(myFloatIntSub(0.1, 50), lessThanOrEqual(myFloatDiv(myIntToFloat(lessThan(0.10145704993941784, 100.0)), myFloatSub(0.1, myFloatIntAdd(0.01, 5))), 10.0)), myFloatMult(3.693800388190727, 100.0)), -3), 1, 14), 6207, lessThanOrEqual(myFloatIntSub(myFloatIntSub(0.1, 8), passInt(0)), 10.0), 32), 1, 8), 1, 10), 8), 1, 32), 12), 0), 14, falseBool, 8), 1, 32), myFloatToInt(2.1890902574242297)), 6207, lessThanOrEqual(myFloatIntSub(0.1, 50), 10.0), 32), 1, 8), 1, 10), 8), 1, 32), 12), 14, falseBool, 10), 8), trueBool, myFloatToInt(-4.901541175503988)), trueBool, myFloatToInt(-4.901541175503988)), 0), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('BAGGED', None))
Learner(MyEVM(MyDeltaSTOCH(MyEVM(MyBollingerBand(MyEVM(MyDeltaMACD(MyEVM(MyDeltaSTOCH(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaSTOCH(MyBollingerBand(MyCMF(MyEVM(MyDeltaSTOCH(MyEVM(MyDeltaSTOCH(ARG0, 1, 12), 8), 1, 32), 0), 0), 14, ifThenElseBool(falseBool, falseBool, falseBool), trueBool), 1, myFloatToInt(10.0)), 1, 32), 12), 0), 14, falseBool, 8), 1, 32), myFloatToInt(2.1890902574242297)), 6207, lessThanOrEqual(myFloatIntSub(myFloatIntSub(0.1, 50), 50), 10.0), 32), 1, 8), 1, 10), 8), 1, 32), 12), 14, falseBool, 10), 8), trueBool, myFloatToInt(-4.901541175503988)), 0), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('BAGGED', None))
Learner(MyEVM(MyDeltaSTOCH(MyEVM(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyEVM(MyDeltaSTOCH(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyDeltaSTOCH(MyEVM(MyDeltaSTOCH(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaSTOCH(MyBollingerBand(MyCMF(MyEVM(MyDeltaSTOCH(MyEVM(MyDeltaSTOCH(ARG0, 1, 12), 8), 1, 32), 0), 0), 14, ifThenElseBool(falseBool, falseBool, falseBool), trueBool), 1, myFloatToInt(10.0)), 1, 32), 12), 0), 14, falseBool, 8), 1, 32), 1, 10), 8), 1, 32), myFloatToInt(-4.901541175503988)), 6207, lessThanOrEqual(-4.901541175503988, 10.0), 32), 1, 8), 1, 10), 8), 1, 32), 12), 0), 4, falseBool, 0), 8), trueBool, myFloatToInt(-4.901541175503988)), 0), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('BAGGED', None))
Learner(MyEVM(MyDeltaSTOCH(MyEVM(MyBollingerBand(MyEVM(MyDeltaMACD(MyEVM(MyDeltaSTOCH(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaSTOCH(MyBollingerBand(MyCMF(MyEVM(MyDeltaSTOCH(MyEVM(MyDeltaSTOCH(ARG0, 1, 12), 8), 1, 32), 0), 0), 14, ifThenElseBool(falseBool, falseBool, falseBool), trueBool), 1, myFloatToInt(-4.695623339332281)), 1, 32), 12), 0), 14, falseBool, 8), 1, 32), myFloatToInt(2.1890902574242297)), 6207, lessThanOrEqual(myFloatIntSub(0.1, 50), -4.695623339332281), 32), 1, 8), 1, 10), 8), 1, 32), 12), 14, falseBool, 10), 8), trueBool, myFloatToInt(-4.901541175503988)), 0), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('BAGGED', None))
Learner(MyEVM(MyDeltaSTOCH(MyEVM(MyBollingerBand(MyEVM(MyDeltaMACD(MyEVM(MyDeltaSTOCH(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyDeltaSTOCH(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaSTOCH(MyBollingerBand(MyCMF(MyEVM(MyDeltaSTOCH(MyEVM(MyDeltaSTOCH(ARG0, 1, 12), 8), 1, 32), 0), 0), 14, ifThenElseBool(falseBool, falseBool, falseBool), trueBool), 1, myFloatToInt(10.0)), 1, 32), falseBool), 8), 14, falseBool, 8), 1, 32), myFloatToInt(2.1890902574242297)), 6207, lessThanOrEqual(myFloatIntSub(0.1, 50), 10.0), 32), 1, 8), 1, 10), 8), 1, 32), 12), 14, falseBool, 10), 8), trueBool, myFloatToInt(-4.901541175503988)), 0), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('GRID', None))
Learner(MinMaxScaler(MyDeltaMACD(MyDeltaSTOCH(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyFIBRET(MyDeltaBIASEMA(MyDeltaBIASEMA(ARG0, 12), 10), 8, falseBool), 3), 2), 2474), 9, 3), 9, 3), 5, 9)), ModifyLearnerBool(LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), falseBool, 6), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyFIBRET(MyDeltaBIASEMA(MyDeltaBIASEMA(ARG0, 12), 10), 8, falseBool), 3), -1), 2474), 9, 3), 9, 3), 5, 9), LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), ModifyEnsembleInt(EnsembleType('SINGLE', None), 50, greaterThanEqual(3.2446468090476532, myFloatDiv(100.0, ifThenElseFloat(myNot(ifThenElseBool(trueBool, falseBool, falseBool)), passFloat(0.1), myFloatIntAdd(1.0, 150))))))
Learner(MinMaxScaler(MyDeltaMACD(MyDeltaSTOCH(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyFIBRET(MyDeltaBIASEMA(MyDeltaBIASEMA(ARG0, 12), 10), 8, trueBool), myFloatToInt(1.0)), 2), 2474), 9, 3), 9, 3), 5, 9)), ModifyLearnerBool(LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), trueBool, 6), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyFIBRET(MyDeltaBIASEMA(MyDeltaBIASEMA(ARG0, 12), 10), 8, falseBool), 3), -1), 2474), 9, 3), 9, 3), 5, 9), LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), ModifyEnsembleInt(ModifyEnsembleInt(EnsembleType('SINGLE', None), 10, greaterThanEqual(3.2446468090476532, ifThenElseFloat(ifThenElseBool(trueBool, lessThanOrEqual(0.01, myFloatIntMult(myFloatAdd(1.0, 10.0), 248)), trueBool), myFloatAdd(passFloat(0.1), 100.0), myFloatIntAdd(1.0, myFloatToInt(3.2446468090476532))))), 50, greaterThanEqual(3.2446468090476532, myFloatDiv(100.0, ifThenElseFloat(ifThenElseBool(myOr(ifThenElseBool(trueBool, falseBool, falseBool), myOr(equal(myFloatSub(ifThenElseFloat(trueBool, 10.0, 1.0), passFloat(10.0)), ifThenElseFloat(lessThan(0.01, 100.0), myFloatIntSub(2.6422192892242213, -8), myFloatDiv(0.01, 10.0))), trueBool)), lessThanOrEqual(0.01, myFloatIntMult(1.0, 7)), myNot(ifThenElseBool(trueBool, falseBool, falseBool))), passFloat(0.1), myFloatIntAdd(1.0, 3))))))
Learner(MinMaxScaler(MyDeltaMACD(MyDeltaSTOCH(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyFIBRET(MyDeltaBIASEMA(MyDeltaBIASEMA(ARG0, 12), 10), 8, trueBool), 3), -1), 2474), 9, 3), 9, 3), 5, passInt(9))), ModifyLearnerBool(LearnerType('BOOSTING_REGRESSION', {'learning_rate': 0.1, 'n_estimators': 500, 'max_depth': 3}), trueBool, 6), EnsembleType('SINGLE', None))
Learner(MySMA(MyDeltaSTOCH(ARG0, 1, 10), 32), LearnerType('ARGMIN', {'sampling_rate': 1}), ModifyEnsembleInt(EnsembleType('SINGLE', None), 50, myAnd(equal(myFloatIntMult(myFloatIntMult(myFloatIntMult(0.1, 3), 9), 5), myFloatIntMult(0.1, True)), lessThan(2.484343570333097, 0.01))))
Learner(MyDeltaSTOCH(ARG0, 13, 2), LearnerType('ARGMIN', {'sampling_rate': 1}), ModifyEnsembleInt(EnsembleType('SINGLE', None), 50, lessThan(ifThenElseFloat(falseBool, 10.0, 10.0), ifThenElseFloat(falseBool, 0.01, 0.1))))
Learner(MyDeltaSTOCH(ARG0, 13, 2), LearnerType('ARGMIN', {'sampling_rate': 1}), ModifyEnsembleInt(EnsembleType('SINGLE', None), 50, lessThan(ifThenElseFloat(falseBool, 10.0, 4.131372285740543), ifThenElseFloat(falseBool, 0.01, 0.1))))
Learner(MySMA(MyIdentity(MyDeltaSTOCH(ARG0, 13, 2), 50, 32), 32), LearnerType('ARGMIN', {'sampling_rate': 1}), EnsembleType('SINGLE', None))
Learner(MySMA(MyIdentity(MySMA(MyIdentity(MyDeltaSTOCH(ARG0, 13, 2), 255, 5), 32), 0, 6), 3), LearnerType('ARGMIN', {'sampling_rate': 1}), ModifyEnsembleInt(EnsembleType('ADABOOST', {'n_estimators': 50, 'learning_rate': 1.0}), 50, myAnd(myAnd(myOr(falseBool, trueBool), trueBool), lessThan(ifThenElseFloat(trueBool, 0.1, 1.7820213862360479), ifThenElseFloat(lessThan(0.1, myFloatAdd(myFloatIntSub(10.0, 255), -0.9710080876962355)), 0.01, 10.0)))))
Learner(MyRSI(MyAROON(MyEVM(MyRSI(MySTOCH(MyMACD(ARG0, 3, 12, 5, 5), 5, 2, True), 4, True), 14), falseBool), myIntAdd(5, 14), 14), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerBool(ModifyLearnerBool(ModifyLearnerInt(LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), ifThenElseBool(passBool(falseBool), falseBool, falseBool), 0), trueBool, 5), falseBool, 3), 64, 1), False, 1), EnsembleType('SINGLE', None))
Learner(MyRSI(MyAROON(MyEVM(MyRSI(MySTOCH(MyMACD(ARG0, 3, 12, 5, 5), 5, 2, True), 4, True), 14), falseBool), myIntAdd(5, 14), 14), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerBool(ModifyLearnerInt(LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), ifThenElseBool(passBool(trueBool), falseBool, falseBool), 0), falseBool, 3), 64, 1), False, 1), EnsembleType('SINGLE', None))
Learner(MyRSI(MyAROON(MyEVM(MyRSI(MySTOCH(MyMACD(ARG0, 3, 12, 5, 5), 5, 2, True), 4, True), 14), falseBool), myIntAdd(5, 14), 14), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerBool(ModifyLearnerInt(LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), ifThenElseBool(passBool(falseBool), falseBool, falseBool), 0), falseBool, 3), 64, 1), False, 1), EnsembleType('SINGLE', None))
Learner(MyEVM(MyRSI(MyAROON(MyEVM(MyRSI(MySTOCH(MyMACD(ARG0, 3, 12, 5, 5), 5, 2, 12), 4, True), 14), falseBool), myIntAdd(5, 14), 14), 5), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), ifThenElseBool(passBool(trueBool), falseBool, falseBool), 0), False, 255), 64, 1), False, 1), EnsembleType('SINGLE', None))
Learner(MyEVM(MyRSI(MyAROON(MyEVM(MyRSI(MySTOCH(MyMACD(ARG0, 3, 12, 5, 5), 5, 2, 12), 4, True), 14), falseBool), myIntAdd(5, 14), 14), 5), ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(ModifyLearnerInt(LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), falseBool, 0), False, 255), 64, 1), False, 1), EnsembleType('SINGLE', None))
Learner(MyWILLR(MyBollingerBand(MyVWAP(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MyMACD(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MyIdentity(MyIdentity(ARG0, 0, 4), 1, 4), 5), 10), 6, 10), -6, 1), 9, 3, False), falseBool, 9, 32, False), 12, False), falseBool), 6), 10), 5), 10), 6), 12), 10), 9, 3), 4, 9), 10), 2, 2, False), -10, True), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyWILLR(MyBollingerBand(MyVWAP(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MyMACD(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MyIdentity(MyIdentity(ARG0, 0, 4), 1, 4), 5), 10), 6, 10), -6, 1), 9, 3, False), falseBool, 9, 32, False), 12, False), falseBool), 6), 10), 5), 10), 6), 12), 10), 9, 3), 4, 9), 10), 2, 2, False), -14, 4), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyBollingerBand(MyWILLR(MyBollingerBand(MyVWAP(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MyMACD(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MyIdentity(MyIdentity(ARG0, 0, 4), 1, 4), 5), 10), 6, 10), 12, 1), 9, 3, False), lessThan(myFloatIntAdd(myIntToFloat(1), myNot(trueBool)), myFloatMult(myIntToFloat(trueBool), myFloatMult(1.0, 100.0))), 9, 32, False), 12, False), falseBool), 6), 10), 5), 10), 6), 12), 14), 9, 3), 4, 9), 10), 2, 2, False), -10, True), 14, 2, True), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), ModifyEnsembleFloat(EnsembleType('SINGLE', None), 1.0, 2))
Learner(MyBollingerBand(MyWILLR(MyBollingerBand(MyVWAP(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MyMACD(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MyIdentity(MyIdentity(ARG0, 0, 4), 1, 4), 5), 10), 6, 10), 12, 1), 9, 3, False), lessThan(myFloatIntAdd(myIntToFloat(1), myNot(trueBool)), myFloatMult(myIntToFloat(trueBool), myFloatMult(1.0, myFloatIntSub(myFloatIntMult(100.0, 50), trueBool)))), 9, 32, False), 12, False), falseBool), 6), 10), 5), 10), 6), 12), 14), 9, 3), 6, 9), 10), 2, 2, False), -10, True), 14, 2, True), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyBollingerBand(MyWILLR(MyBollingerBand(MyVWAP(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MyMACD(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MyIdentity(MyIdentity(ARG0, 0, 4), 1, 4), 5), 10), 6, 10), 12, 1), 9, 3, False), lessThan(myFloatIntAdd(myIntToFloat(1), myNot(trueBool)), myFloatMult(myIntToFloat(trueBool), myFloatMult(1.0, 100.0))), 9, 32, False), 12, False), falseBool), 6), 10), 5), 10), 6), 12), 14), 9, 3), 4, 9), 10), 2, 2, False), -10, 12), 14, 2, True), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 128, 'hidden_layer3': 0, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), ModifyEnsembleFloat(EnsembleType('SINGLE', None), 1.0, 2))
MyMACD(Learner(MyDeltaRSI(ARG0, falseBool), LearnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}), EnsembleType('SINGLE', None)), myAnd(lessThanOrEqual(0.1, 0.1), myAnd(trueBool, falseBool)), 6, 5, trueBool)
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MyMACD(MySTOCH(MyRSI(MyRSI(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MyDeltaRSI(MyDeltaBIASSMA(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MyEMA(MyWILLR(MySTOCH(MyBIASSMA(MyBIASSMA(MySMA(MySMA(MySMA(MySMA(MyIdentity(MyIdentity(ARG0, 64, 5), 1, 1), 5), 6), 10), 20), 5), 10), 14, 6, True), 14, True), 14), 5), 10), 6, False), 12, 9), 9, 7, False), 12, False), 5), 6), 10), 5), 10), 6), 14), 1500), 9, 3), 4, 9), 6, 1), 12, False), 9, 4, False), 3, 9, 6, 14), 12, False), 5), 6), 10), 5), 10), 6), 12), 12), 9, 3), 6, 9), ModifyLearnerFloat(LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 256, 'hidden_layer3': 128, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), 0.01, True), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MySMA(MySMA(MySMA(MySMA(MyIdentity(MyIdentity(ARG0, 0, 1), 1, 1), 5), 6), 10), 1500), 5), 10), 6, 1), greaterThan(1.0, myFloatMult(0.01, 0.1)), 12), 9, 4, 14), 4), 100), 12, 3), 6, 9), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 256, 'hidden_layer3': 128, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyDeltaRSI(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MySMA(MySMA(MySMA(MySMA(MyIdentity(MyIdentity(ARG0, 0, 1), 1, 1), 5), 6), 10), 1500), 5), 10), 6, 1), greaterThan(1.0, myFloatMult(0.01, 0.1)), 12), 9, 4, 14), 4), 100), 12, 3), True, 9), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 256, 'hidden_layer3': 128, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyWILLR(ARG0, 5, trueBool), LearnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}), EnsembleType('SINGLE', None))
Learner(MinMaxScaler(MyDeltaSTOCH(MyDeltaWILLR(ARG0, -15), 1, myFloatToInt(myFloatIntAdd(0.01, 1)))), LearnerType('ARGMAX', {'sampling_rate': 1}), ModifyEnsembleInt(EnsembleType('SINGLE', None), 50, falseBool))
Learner(MinMaxScaler(MyDeltaSTOCH(MyDeltaWILLR(ARG0, -15), 1, myFloatToInt(myFloatIntAdd(0.01, 1)))), LearnerType('ARGMAX', {'sampling_rate': 1}), EnsembleType('SINGLE', None))
Learner(MinMaxScaler(MyDeltaSTOCH(MyDeltaWILLR(ARG0, 12), 1, myFloatToInt(myFloatIntAdd(0.01, 1)))), LearnerType('ARGMAX', {'sampling_rate': 1}), EnsembleType('SINGLE', None))
Learner(MinMaxScaler(MyDeltaSTOCH(MyDeltaWILLR(ARG0, 14), 1, myFloatToInt(myFloatIntAdd(0.01, 1)))), LearnerType('ARGMAX', {'sampling_rate': 1}), ModifyEnsembleInt(EnsembleType('BAGGED', None), 50, equal(-0.3845938355885714, 0.01)))
Learner(MinMaxScaler(MyDeltaSTOCH(MyDeltaWILLR(ARG0, myFloatToInt(100.0)), 1, myFloatToInt(myFloatIntAdd(0.01, 1)))), LearnerType('ARGMAX', {'sampling_rate': 1}), ModifyEnsembleInt(EnsembleType('SINGLE', None), 50, falseBool))
Learner(MyDeltaMACD(MyDeltaSTOCH(ARG0, 4, 3), True, 9), LearnerType('ARGMIN', {'sampling_rate': 1}), ModifyEnsembleFloat(EnsembleType('SINGLE', None), myIntToFloat(passBool(greaterThan(myFloatSub(3.202439386870367, myFloatIntMult(-0.4615537314229101, 9)), 100.0))), lessThanOrEqual(0.1, 0.01)))
Learner(MyDeltaMACD(MyDeltaSTOCH(ARG0, 4, 3), 12, 9), LearnerType('ARGMIN', {'sampling_rate': 1}), ModifyEnsembleFloat(EnsembleType('SINGLE', None), myIntToFloat(falseBool), greaterThan(myFloatSub(myFloatIntMult(-0.4615537314229101, 9), myFloatMult(100.0, -0.7947443206078102)), 10.0)))
Learner(MyDeltaMACD(MyDeltaSTOCH(ARG0, 4, 3), 12, 9), LearnerType('ARGMIN', {'sampling_rate': 1}), ModifyEnsembleFloat(EnsembleType('SINGLE', None), myIntToFloat(passBool(greaterThan(myFloatSub(myFloatIntMult(-4.862595497321847, 5), myFloatIntMult(-0.4615537314229101, 9)), 10.0))), lessThanOrEqual(0.1, 0.01)))
Learner(MyDeltaMACD(MyDeltaSTOCH(ARG0, 4, 3), 4, 9), LearnerType('ARGMIN', {'sampling_rate': 1}), ModifyEnsembleFloat(EnsembleType('SINGLE', None), myIntToFloat(passBool(greaterThan(myFloatSub(myFloatIntMult(-4.862595497321847, 5), myFloatIntMult(-0.4615537314229101, -5)), 10.0))), lessThanOrEqual(0.1, 0.01)))
Learner(MyDeltaMACD(MyDeltaSTOCH(ARG0, 4, 3), 4, 10), LearnerType('KNN_REGRESSION', {'K': 3, 'weights': 0}), ModifyEnsembleFloat(ModifyEnsembleFloat(ModifyEnsembleFloat(EnsembleType('SINGLE', None), myFloatIntMult(0.1, myOr(falseBool, myOr(falseBool, falseBool))), falseBool), myFloatDiv(0.01, myIntToFloat(6)), passBool(falseBool)), myFloatIntAdd(0.1, 7), trueBool))
Learner(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaWILLR(MyBollingerBand(MyEVM(Learner(MyVWMA(MyDeltaSTOCH(ARG0, passBool(passBool(myOr(myOr(trueBool, lessThan(myFloatIntMult(0.01, 50), myFloatDiv(100.0, 1.0))), greaterThan(myFloatIntSub(myFloatIntAdd(3.8759393484522455, 64), 4), 0.01)))), 1), 12), ModifyLearnerFloat(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), 7, 10), 0.1, 10), EnsembleType('ADABOOST', {'n_estimators': 50, 'learning_rate': 1.0})), 2), -13, 2, -15), 3473), 4, 10), 5), 2), -13, 2, -15), ModifyLearnerFloat(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), 7, 10), 3.8759393484522455, 10), EnsembleType('ADABOOST', {'n_estimators': 50, 'learning_rate': 1.0}))
Learner(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaWILLR(MyBollingerBand(MyEVM(Learner(MyIdentity(MyVWMA(MyDeltaSTOCH(ARG0, passBool(passBool(myOr(myOr(trueBool, falseBool), greaterThan(myFloatIntAdd(3.8759393484522455, 64), 0.01)))), 1), 12), 100, 64), ModifyLearnerFloat(ModifyLearnerInt(LearnerType('ARGMAX', {'sampling_rate': 1}), 7, 10), 10.0, 10), EnsembleType('ADABOOST', {'n_estimators': 50, 'learning_rate': 1.0})), 2), -13, 2, -15), 3473), 4, 10), 5), 2), -13, 2, 9), ModifyLearnerFloat(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), 7, 10), myFloatIntDiv(0.1, 50), 10), ModifyEnsembleInt(EnsembleType('BAGGED', None), -7, 2))
MyDeltaRSI(Learner(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaWILLR(MyVWMA(MyDeltaSTOCH(ARG0, passBool(passBool(myOr(myOr(trueBool, falseBool), greaterThan(myFloatIntAdd(0.01, 64), 2.2147957256933646)))), 1), 3), 3473), 4, 10), 5), 2), 6, 2, -15), ModifyLearnerFloat(ModifyLearnerFloat(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), 7, 10), 0.01, 255), 0.1, 10), EnsembleType('GRID', None)), 9)
Learner(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaWILLR(MyVWMA(MyDeltaSTOCH(ARG0, passBool(passBool(myOr(myOr(trueBool, falseBool), greaterThan(myFloatIntAdd(3.8759393484522455, 255), 0.01)))), 1), 12), 3473), 4, 10), 5), 2), -13, 2, -15), ModifyLearnerFloat(ModifyLearnerInt(LearnerType('ARGMIN', {'sampling_rate': 1}), 7, 10), 0.1, 10), EnsembleType('ADABOOST', {'n_estimators': 50, 'learning_rate': 1.0}))
MyDeltaRSI(Learner(MyBollingerBand(MyEVM(MyEVM(MyDeltaMACD(MyDeltaWILLR(MyVWMA(MyDeltaSTOCH(ARG0, passBool(myOr(trueBool, falseBool)), 1), 3), 3473), 4, 10), 5), 5), 10, 2, 2), ModifyLearnerList(ModifyLearnerFloat(LearnerType('ARGMIN', {'sampling_rate': 1}), 0.1, 10), [-13, -7], 2), EnsembleType('GRID', None)), 9)
Learner(MyDeltaMACD(MyIdentity(ARG0, 8, 10), 4, 9), LearnerType('DECISIONTREE_REGRESSION', None), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyIdentity(ARG0, -2, 10), 4, 9), ModifyLearnerFloat(LearnerType('DECISIONTREE_REGRESSION', None), 0.01, 8), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyIdentity(ARG0, 3, 10), 4, 9), LearnerType('DECISIONTREE_REGRESSION', None), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyIdentity(ARG0, 3, 10), 4, 9), ModifyLearnerFloat(LearnerType('DECISIONTREE_REGRESSION', None), 0.01, 8), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MyIdentity(ARG0, -2, 10), 4, 9), LearnerType('DECISIONTREE_REGRESSION', None), EnsembleType('SINGLE', None))
Learner(MyDeltaSTOCH(MyDeltaWILLR(ARG0, 4315), passInt(greaterThanEqual(myIntToFloat(128), 0.01)), passInt(trueBool)), LearnerType('ARGMAX', {'sampling_rate': 1}), EnsembleType('SINGLE', None))
Learner(MyDeltaSTOCH(MyDeltaWILLR(ARG0, 80), passBool(passBool(trueBool)), passInt(greaterThanEqual(1.0, 0.01))), ModifyLearnerInt(ModifyLearnerBool(LearnerType('ARGMAX', {'sampling_rate': 1}), trueBool, greaterThanEqual(myFloatIntDiv(1.0, 4315), myFloatIntAdd(myIntToFloat(10), 80))), 3, 2), ModifyEnsembleInt(EnsembleType('GRID', None), notEqual(myFloatDiv(0.1, 1.0), 100.0), ifThenElseBool(lessThanOrEqual(-0.017549399416506795, 0.01), equal(myFloatIntAdd(0.1, lessThan(100.0, 0.01)), myFloatMult(myFloatDiv(100.0, 0.01), 10.0)), falseBool)))
Learner(MyDeltaSTOCH(MyDeltaWILLR(ARG0, 1500), myOr(trueBool, passBool(passBool(trueBool))), passInt(greaterThanEqual(0.01, 0.01))), ModifyLearnerBool(LearnerType('ARGMAX', {'sampling_rate': 1}), trueBool, lessThanOrEqual(myFloatIntDiv(1.0, 5811), myFloatIntAdd(myIntToFloat(128), passInt(trueBool)))), EnsembleType('ADABOOST', {'n_estimators': 50, 'learning_rate': 1.0}))
Learner(MyDeltaSTOCH(MyDeltaWILLR(ARG0, 80), myOr(notEqual(myFloatDiv(0.1, myIntToFloat(128)), 100.0), passBool(passBool(trueBool))), passInt(greaterThanEqual(1.0, 0.01))), ModifyLearnerInt(ModifyLearnerBool(LearnerType('ARGMAX', {'sampling_rate': 1}), greaterThanEqual(1.0, 0.01), greaterThanEqual(myFloatIntDiv(1.0, 4315), myFloatIntAdd(myIntToFloat(10), passInt(trueBool)))), 3, 2), EnsembleType('SINGLE', None))
Learner(MyDeltaSTOCH(MyDeltaWILLR(ARG0, 80), myOr(myNot(equal(myIntToFloat(4), myIntToFloat(10))), passBool(falseBool)), passInt(greaterThanEqual(1.0, 0.01))), ModifyLearnerInt(LearnerType('ARGMAX', {'sampling_rate': 1}), 3, 2), ModifyEnsembleFloat(ModifyEnsembleInt(EnsembleType('SINGLE', None), trueBool, greaterThanEqual(1.0, 0.01)), myFloatIntDiv(1.0, 4315), greaterThanEqual(-0.27121876079551477, 0.1)))
Learner(MyDeltaMACD(MySMA(MySMA(MySMA(MyIdentity(MyDeltaSTOCH(MyVWAP(ARG0, 12), 9, 3), 1, 5), 5), 32), 9), equal(myFloatIntAdd(myFloatDiv(0.1, 0.01), passBool(falseBool)), myFloatIntDiv(myFloatMult(10.0, 0.1), myIntSub(10, 1))), 9), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 256, 'hidden_layer3': 128, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MySMA(MySMA(MySMA(MyIdentity(MyDeltaSTOCH(MyVWAP(ARG0, 12), 9, 3), 1, 5), 5), 32), myAnd(falseBool, trueBool)), myAnd(equal(myFloatIntAdd(myFloatDiv(0.1, 0.01), passBool(falseBool)), myFloatIntDiv(myFloatMult(10.0, 0.1), myIntSub(10, 9))), falseBool), 9), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 256, 'hidden_layer3': 128, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyDeltaMACD(MySMA(MySMA(MySMA(MyIdentity(MyDeltaSTOCH(MyVWAP(ARG0, 13), 9, 3), 1, 5), 5), 32), 9), equal(myFloatIntAdd(ifThenElseFloat(falseBool, myFloatDiv(0.1, 0.01), 0.01), passBool(falseBool)), myFloatIntDiv(myFloatMult(10.0, 0.1), myIntSub(10, 1))), 9), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 256, 'hidden_layer3': 128, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyBollingerBand(MyEVM(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyIdentity(MyDeltaBIASSMA(MyDeltaSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MyMACD(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MySMA(MySMA(MySMA(MyIdentity(MyIdentity(MyEMA(ARG0, 100), 0, 1), 1, 1), 5), 6), 10), 5), 10), 6, False), 12, False), 5, 3, False), 3, 9, 5, myIntDiv(False, 57)), 12, 96), 5), 6), 10), 5), 50, 3), 12), 9, 3), 4, 9), 14), 14, 2, False), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 256, 'hidden_layer3': 128, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))
Learner(MyBollingerBand(MyEVM(MyDeltaMACD(MyDeltaSTOCH(MyDeltaWILLR(MyIdentity(MyDeltaBIASSMA(MyBIASSMA(MyDeltaSMA(MyDeltaSMA(MyWILLR(MyMACD(MySTOCH(MyRSI(MyRSI(MyBIASSMA(MyBIASSMA(MySMA(MySMA(MySMA(MyIdentity(MyIdentity(MyEMA(ARG0, 100), 0, 1), 1, 1), 5), 8351), 10), 5), 10), 6, False), 12, False), 5, 3, False), 3, 9, 5, myIntDiv(False, 57)), 12, 68), 5), 6), 10), 5), 50, 3), 12), 9, 3), 4, 9), 14), 14, 2, False), LearnerType('MLP_REGRESSION', {'hidden_layer1': 128, 'hidden_layer2': 256, 'hidden_layer3': 128, 'hidden_layer4': 0, 'hidden_layer5': 0, 'learning_rate': 0.001, 'activation': 3}), EnsembleType('SINGLE', None))